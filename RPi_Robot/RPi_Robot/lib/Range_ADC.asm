;;*****************************************************************************
;;*****************************************************************************
;;  FILENAME: Range_ADC.asm
;;   Version: 1.20, Updated on 2013/5/19 at 10:39:54
;;  Generated by PSoC Designer 5.4.2946
;;
;;  DESCRIPTION: Assembler source for the ADCINC A/D Converter
;;               User Module with 1st-order modulator.
;;
;;  NOTE: User Module APIs conform to the fastcall16 convention for marshalling
;;        arguments and observe the associated "Registers are volatile" policy.
;;        This means it is the caller's responsibility to preserve any values
;;        in the X and A registers that are still needed after the API
;;        function returns. Even though these registers may be preserved now,
;;        there is no guarantee they will be preserved in future releases.
;;-----------------------------------------------------------------------------
;;  Copyright (c) Cypress Semiconductor 2013. All Rights Reserved.
;;*****************************************************************************
;;*****************************************************************************

include "m8c.inc"
include "memory.inc"

include "Range_ADC.inc"


;-----------------------------------------------
;  Global Symbols
;-----------------------------------------------
export  Range_ADC_Start
export _Range_ADC_Start
export  Range_ADC_SetPower
export _Range_ADC_SetPower
export  Range_ADC_Stop
export _Range_ADC_Stop
export  Range_ADC_GetSamples
export _Range_ADC_GetSamples
export  Range_ADC_StopADC
export _Range_ADC_StopADC
export  Range_ADC_fIsDataAvailable
export _Range_ADC_fIsDataAvailable
export  Range_ADC_iClearFlagGetData
export _Range_ADC_iClearFlagGetData
export  Range_ADC_wClearFlagGetData
export _Range_ADC_wClearFlagGetData
export  Range_ADC_cClearFlagGetData
export _Range_ADC_cClearFlagGetData
export  Range_ADC_bClearFlagGetData
export _Range_ADC_bClearFlagGetData
export  Range_ADC_iGetData
export _Range_ADC_iGetData
export  Range_ADC_wGetData
export _Range_ADC_wGetData
export  Range_ADC_bGetData
export _Range_ADC_bGetData
export  Range_ADC_cGetData
export _Range_ADC_cGetData
export  Range_ADC_fClearFlag
export _Range_ADC_fClearFlag
export  Range_ADC_WritePulseWidth
export _Range_ADC_WritePulseWidth


AREA bss (RAM,REL)

;-----------------------------------------------
;  Constant Definitions
;-----------------------------------------------

;-----------------------------------------------
; Variable Allocation
;-----------------------------------------------


AREA UserModules (ROM, REL)

.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME: Range_ADC_Start
;
;  DESCRIPTION: Applies power setting to the module's analog PSoc block.
;               and starts the PWM
;-----------------------------------------------------------------------------
;
;  ARGUMENTS:    The A register contains the power setting.
;  RETURNS:      Nothing.
;  SIDE EFFECTS:
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.
;
 Range_ADC_Start:
_Range_ADC_Start:
   RAM_PROLOGUE RAM_USE_CLASS_1
   call  Range_ADC_SetPower
   Range_ADC_RESET_INTEGRATOR_M
   mov   reg[Range_ADC_PWMdr1],ffh
   or    reg[Range_ADC_PWMcr0],01h                   ; start PWM
   RAM_EPILOGUE RAM_USE_CLASS_1
   ret
.ENDSECTION

   
.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME: Range_ADC_SetPower
;
;  DESCRIPTION: Applies power setting to the module's analog PSoc block.
;-----------------------------------------------------------------------------
;
;  ARGUMENTS:    The A register contains the power setting.
;  RETURNS:      Nothing.
;  SIDE EFFECTS:
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.
;
 Range_ADC_SetPower:
_Range_ADC_SetPower:
   RAM_PROLOGUE RAM_USE_CLASS_2
   mov  X,SP                                     ; Set up Stack frame
   and  A,03h                                    ; Ensure value is legal
   push A
   mov  A,reg[Range_ADC_AtoDcr3]                 ; First SC block:
   and  A,~03h                                   ;   clear power bits to zero
   or   A,[ X ]                                  ;   establish new value
   mov  reg[Range_ADC_AtoDcr3],A                 ;   change the actual setting
   pop  A
   RAM_EPILOGUE RAM_USE_CLASS_2
   ret
.ENDSECTION

.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME: Range_ADC_Stop
;
;  DESCRIPTION:   Removes power from the module's analog PSoc block.
;                 and turns off PWM
;-----------------------------------------------------------------------------
;
;  ARGUMENTS:     None.
;  RETURNS:       Nothing.
;  SIDE EFFECTS:
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.
;
 Range_ADC_Stop:
_Range_ADC_Stop:
   RAM_PROLOGUE RAM_USE_CLASS_1
   Range_ADC_STOPADC_M
   and  reg[Range_ADC_AtoDcr3], ~03h
   and  reg[Range_ADC_PWMcr0], ~01h ; stop PWM
   RAM_EPILOGUE RAM_USE_CLASS_1
   ret
.ENDSECTION


.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME: Range_ADC_GetSamples
;
;  DESCRIPTION: Activates interrupts for this user module and begins sampling.
;-----------------------------------------------------------------------------
;
;  ARGUMENTS:    A register contain number of samples
;  RETURNS:      Nothing.
;  SIDE EFFECTS:
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.
;          
;    Currently only the page pointer registers listed below are modified: 
;          CUR_PP
;
 Range_ADC_GetSamples:
_Range_ADC_GetSamples:
   RAM_PROLOGUE RAM_USE_CLASS_4
   RAM_SETPAGE_CUR >Range_ADC_fMode
   Range_ADC_ENABLE_INTEGRATOR_M
   mov [Range_ADC_fMode],0
   mov [Range_ADC_bState],0
   mov [Range_ADC_bNumSamples],A
   mov A, reg[Range_ADC_PWMdr2]
   jnz  .SkipPulseWrite
   mov reg[Range_ADC_PWMdr2], 1
.SkipPulseWrite:

   M8C_SetBank1
   and reg[E7h], 3Fh             ; if we are in 29xxx or 24x94   
   or  reg[E7h], 40h             ; then set to incremental Mode
   M8C_SetBank0

   Range_ADC_STARTADC_M  ;enable interrupt 
   RAM_EPILOGUE RAM_USE_CLASS_4 
   ret
.ENDSECTION


.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME: Range_ADC_StopADC
;
;  DESCRIPTION: Shuts down the A/D is an orderly manner.  The interrupt
;               is disabled but the PWM output is still active.
;               Integrator is reset
;-----------------------------------------------------------------------------
;
;  ARGUMENTS:    None.
;  RETURNS:      Nothing.
;  SIDE EFFECTS:
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.
;
 Range_ADC_StopADC:
_Range_ADC_StopADC:
   RAM_PROLOGUE RAM_USE_CLASS_1
   M8C_SetBank1
   and reg[E7h], 3Fh             ; if we are in 29xxx or 24x94   
   or  reg[E7h], 80h             ; then set to incremental Mode
   M8C_SetBank0
   Range_ADC_STOPADC_M
   Range_ADC_RESET_INTEGRATOR_M
   RAM_EPILOGUE RAM_USE_CLASS_1 
   ret
.ENDSECTION


.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME: Range_ADC_fIsDataAvailable
;
;  DESCRIPTION: Returns the status of the A/D Data
;-----------------------------------------------------------------------------
;  ARGUMENTS:    None.
;  RETURNS:      fastcall BOOL DataAvailable returned in the A register
;  SIDE EFFECTS:
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.
;          
;    Currently only the page pointer registers listed below are modified: 
;          CUR_PP
;
 Range_ADC_fIsDataAvailable:
_Range_ADC_fIsDataAvailable:
   RAM_PROLOGUE RAM_USE_CLASS_4
   Range_ADC_fIsDataAvailable_M   
   RAM_EPILOGUE RAM_USE_CLASS_4
   ret
.ENDSECTION


.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME:  Range_ADC_iClearFlagGetData
;                  Range_ADC_wClearFlagGetData
;
;  DESCRIPTION:    Clears the fStatus and places ADC data in iResult A/D.
;                  Flag is checked after trandfer to insure valid data.
;                  available. Also clears the DATA_READY flag. 
;-----------------------------------------------------------------------------
;  ARGUMENTS:    None.
;  RETURNS:      fastcall int iResult returned in the X and A register
;  SIDE EFFECTS:
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.
;          
;    Currently only the page pointer registers listed below are modified: 
;          CUR_PP
;
 Range_ADC_iClearFlagGetData:
_Range_ADC_iClearFlagGetData:
 Range_ADC_wClearFlagGetData:
_Range_ADC_wClearFlagGetData:
   RAM_PROLOGUE RAM_USE_CLASS_4
   Range_ADC_iClearFlagGetData_M   
   RAM_EPILOGUE RAM_USE_CLASS_4
   ret
.ENDSECTION


.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME:  Range_ADC_cClearFlagGetData
;                  Range_ADC_bClearFlagGetData
;
;  DESCRIPTION:    Clears the fStatus and places ADC data in iResult A/D.
;-----------------------------------------------------------------------------
;  ARGUMENTS:    None.
;  RETURNS:      fastcall int iResult returned in the X and A register
;  SIDE EFFECTS:
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.
;          
;    Currently only the page pointer registers listed below are modified: 
;          CUR_PP
;
 Range_ADC_cClearFlagGetData:
_Range_ADC_cClearFlagGetData:
 Range_ADC_bClearFlagGetData:
_Range_ADC_bClearFlagGetData:
   RAM_PROLOGUE RAM_USE_CLASS_4
   Range_ADC_bClearFlagGetData_M     
   RAM_EPILOGUE RAM_USE_CLASS_4
   ret
.ENDSECTION
.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME:  Range_ADC_iGetData
;				   Range_ADC_wGetData
;
;  DESCRIPTION:     Returns the data from the A/D.  Does not check if data is
;                   available.
;-----------------------------------------------------------------------------
;  ARGUMENTS:    None.
;  RETURNS:      fastcall int iResult is returned in the X,A registers
;  SIDE EFFECTS:
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.
;          
;    Currently only the page pointer registers listed below are modified: 
;          CUR_PP
;
 Range_ADC_iGetData:
_Range_ADC_iGetData:
 Range_ADC_wGetData:
_Range_ADC_wGetData:
   RAM_PROLOGUE RAM_USE_CLASS_4
   Range_ADC_wGetData_M          
   RAM_EPILOGUE RAM_USE_CLASS_4
   ret
.ENDSECTION
.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME:  Range_ADC_bGetData
;                  Range_ADC_cGetData
;
;  DESCRIPTION:     Returns the data from the A/D.  Does not check if data is
;                   available.
;-----------------------------------------------------------------------------
;  ARGUMENTS:    None.
;  RETURNS:      fastcall CHAR cData returned in the A register
;  SIDE EFFECTS:
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.
;          
;    Currently only the page pointer registers listed below are modified: 
;          CUR_PP
;
 Range_ADC_bGetData:
_Range_ADC_bGetData:
 Range_ADC_cGetData:
_Range_ADC_cGetData:
   RAM_PROLOGUE RAM_USE_CLASS_4
   Range_ADC_cGetData_M        
   RAM_EPILOGUE RAM_USE_CLASS_4
   ret
.ENDSECTION


.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME: Range_ADC_fClearFlag
;
;  DESCRIPTION: Clears the data ready flag.
;-----------------------------------------------------------------------------
;  ARGUMENTS:    None.
;  RETURNS:      Nothing.
;  SIDE EFFECTS: 
;    The DATA_READY flag is cleared.
;    
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.
;          
;    Currently only the page pointer registers listed below are modified: 
;          CUR_PP
;
 Range_ADC_fClearFlag:
_Range_ADC_fClearFlag:
   RAM_PROLOGUE RAM_USE_CLASS_4
   Range_ADC_fClearFlag_M    
   RAM_EPILOGUE RAM_USE_CLASS_4
   ret
.ENDSECTION


.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME: Range_ADC_WritePulseWidth
;
;  DESCRIPTION:
;     Write the 8-bit period value into the compare register (DR2).
;-----------------------------------------------------------------------------
;
;  ARGUMENTS: fastcall BYTE bPeriodValue (passed in A)
;  RETURNS:   Nothing
;  SIDE EFFECTS:
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.
;
 Range_ADC_WritePulseWidth:
_Range_ADC_WritePulseWidth:
   RAM_PROLOGUE RAM_USE_CLASS_1
   Range_ADC_WritePulseWidth_M  
   RAM_EPILOGUE RAM_USE_CLASS_1
   ret
.ENDSECTION

; End of File Range_ADC.asm

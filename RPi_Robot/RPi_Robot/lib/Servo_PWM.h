//*****************************************************************************
//*****************************************************************************
//  FILENAME: Servo_PWM.h
//   Version: 2.5, Updated on 2013/5/19 at 10:44:6
//  Generated by PSoC Designer 5.4.2946
//
//  DESCRIPTION: PWM16 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2013. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef Servo_PWM_INCLUDE
#define Servo_PWM_INCLUDE

#include <m8c.h>

#pragma fastcall16 Servo_PWM_EnableInt
#pragma fastcall16 Servo_PWM_DisableInt
#pragma fastcall16 Servo_PWM_Start
#pragma fastcall16 Servo_PWM_Stop
#pragma fastcall16 Servo_PWM_wReadCounter              // Read  DR0
#pragma fastcall16 Servo_PWM_WritePeriod               // Write DR1
#pragma fastcall16 Servo_PWM_wReadPulseWidth           // Read  DR2
#pragma fastcall16 Servo_PWM_WritePulseWidth           // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 wServo_PWM_ReadCounter              // Read  DR0 (Deprecated)
#pragma fastcall16 wServo_PWM_ReadPulseWidth           // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the Servo_PWM API.
//-------------------------------------------------

extern void Servo_PWM_EnableInt(void);                  // Proxy Class 1
extern void Servo_PWM_DisableInt(void);                 // Proxy Class 1
extern void Servo_PWM_Start(void);                      // Proxy Class 1
extern void Servo_PWM_Stop(void);                       // Proxy Class 1
extern WORD Servo_PWM_wReadCounter(void);               // Proxy Class 2
extern void Servo_PWM_WritePeriod(WORD wPeriod);        // Proxy Class 1
extern WORD Servo_PWM_wReadPulseWidth(void);            // Proxy Class 1
extern void Servo_PWM_WritePulseWidth(WORD wPulseWidth);// Proxy Class 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern WORD wServo_PWM_ReadCounter(void);            // Deprecated
extern WORD wServo_PWM_ReadPulseWidth(void);         // Deprecated


//-------------------------------------------------
// Constants for Servo_PWM API's.
//-------------------------------------------------

#define Servo_PWM_CONTROL_REG_START_BIT        ( 0x01 )
#define Servo_PWM_INT_REG_ADDR                 ( 0x0df )
#define Servo_PWM_INT_MASK                     ( 0x04 )


//--------------------------------------------------
// Constants for Servo_PWM user defined values
//--------------------------------------------------

#define Servo_PWM_PERIOD                       ( 0x168 )
#define Servo_PWM_PULSE_WIDTH                  ( 0x0 )


//-------------------------------------------------
// Register Addresses for Servo_PWM
//-------------------------------------------------

#pragma ioport  Servo_PWM_COUNTER_LSB_REG:  0x044          //DR0 Count register LSB
BYTE            Servo_PWM_COUNTER_LSB_REG;
#pragma ioport  Servo_PWM_COUNTER_MSB_REG:  0x048          //DR0 Count register MSB
BYTE            Servo_PWM_COUNTER_MSB_REG;
#pragma ioport  Servo_PWM_PERIOD_LSB_REG:   0x045          //DR1 Period register LSB
BYTE            Servo_PWM_PERIOD_LSB_REG;
#pragma ioport  Servo_PWM_PERIOD_MSB_REG:   0x049          //DR1 Period register MSB
BYTE            Servo_PWM_PERIOD_MSB_REG;
#pragma ioport  Servo_PWM_COMPARE_LSB_REG:  0x046          //DR2 Compare register LSB
BYTE            Servo_PWM_COMPARE_LSB_REG;
#pragma ioport  Servo_PWM_COMPARE_MSB_REG:  0x04a          //DR2 Compare register MSB
BYTE            Servo_PWM_COMPARE_MSB_REG;
#pragma ioport  Servo_PWM_CONTROL_LSB_REG:  0x047          //Control register LSB
BYTE            Servo_PWM_CONTROL_LSB_REG;
#pragma ioport  Servo_PWM_CONTROL_MSB_REG:  0x04b          //Control register MSB
BYTE            Servo_PWM_CONTROL_MSB_REG;
#pragma ioport  Servo_PWM_FUNC_LSB_REG: 0x144              //Function register LSB
BYTE            Servo_PWM_FUNC_LSB_REG;
#pragma ioport  Servo_PWM_FUNC_MSB_REG: 0x148              //Function register MSB
BYTE            Servo_PWM_FUNC_MSB_REG;
#pragma ioport  Servo_PWM_INPUT_LSB_REG:    0x145          //Input register LSB
BYTE            Servo_PWM_INPUT_LSB_REG;
#pragma ioport  Servo_PWM_INPUT_MSB_REG:    0x149          //Input register MSB
BYTE            Servo_PWM_INPUT_MSB_REG;
#pragma ioport  Servo_PWM_OUTPUT_LSB_REG:   0x146          //Output register LSB
BYTE            Servo_PWM_OUTPUT_LSB_REG;
#pragma ioport  Servo_PWM_OUTPUT_MSB_REG:   0x14a          //Output register MSB
BYTE            Servo_PWM_OUTPUT_MSB_REG;
#pragma ioport  Servo_PWM_INT_REG:       0x0df             //Interrupt Mask Register
BYTE            Servo_PWM_INT_REG;


//-------------------------------------------------
// Servo_PWM Macro 'Functions'
//-------------------------------------------------

#define Servo_PWM_Start_M \
   ( Servo_PWM_CONTROL_LSB_REG |=  Servo_PWM_CONTROL_REG_START_BIT )

#define Servo_PWM_Stop_M  \
   ( Servo_PWM_CONTROL_LSB_REG &= ~Servo_PWM_CONTROL_REG_START_BIT )

#define Servo_PWM_EnableInt_M   \
   M8C_EnableIntMask(  Servo_PWM_INT_REG, Servo_PWM_INT_MASK )

#define Servo_PWM_DisableInt_M  \
   M8C_DisableIntMask( Servo_PWM_INT_REG, Servo_PWM_INT_MASK )

#endif
// end of file Servo_PWM.h
